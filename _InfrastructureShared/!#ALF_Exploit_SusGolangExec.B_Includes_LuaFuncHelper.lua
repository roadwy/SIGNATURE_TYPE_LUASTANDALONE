local L0_0, L1_1, L2_2, L3_3, L4_4, L5_5, L6_6, L7_7, L8_8, L9_9, L10_10, L11_11, L12_12
L0_0 = mp
L0_0 = L0_0.get_mpattributevalue
L1_1 = "RPF:GoLang:pclntab_magic_unknown"
L0_0 = L0_0(L1_1)
L1_1 = isnull
L2_2 = L0_0
L1_1 = L1_1(L2_2)
if L1_1 then
  L1_1 = mp
  L1_1 = L1_1.CLEAN
  return L1_1
end
L1_1 = {
  L2_2,
  L3_3,
  L4_4,
  L5_5
}
L2_2 = 4294967280
L2_2 = false
for L6_6, L7_7 in L3_3(L4_4) do
  if L8_8 ~= L7_7 then
    L2_2 = true
    break
  end
end
if L2_2 then
  if L4_4 then
    return L4_4
  end
  L6_6 = L4_4
  if L5_5 then
    return L5_5
  end
  L6_6 = L5_5
  L7_7 = L4_4
  L6_6 = L6_6(L7_7)
  L7_7 = table_dedup
  L7_7 = L7_7(L8_8)
  L6_6 = L7_7
  L7_7 = {}
  L7_7.SIG_CONTEXT = "GoLang"
  L7_7.CONTENT_SOURCE = "GOLANG_64_WITH_TEMPERED_PCLNTAB_MAGIC"
  for L11_11, L12_12 in L8_8(L9_9) do
    if string.match(L12_12, "^https?://") then
      if mp.CheckUrl(L12_12) == 1 and mp.CheckUrl(L12_12) == 1 then
        return mp.CLEAN
      end
      if SafeGetUrlReputation({L12_12}, L7_7, false, 3000).urls[L12_12] and (SafeGetUrlReputation({L12_12}, L7_7, false, 3000).urls[L12_12].determination == 2 or SafeGetUrlReputation({L12_12}, L7_7, false, 3000).urls[L12_12].determination == 3) and SafeGetUrlReputation({L12_12}, L7_7, false, 3000).urls[L12_12].confidence >= 60 then
        return mp.INFECTED
      end
    end
  end
end
return L3_3

local L0_0, L1_1, L2_2, L3_3, L4_4, L5_5, L6_6, L7_7, L8_8
L0_0 = mp
L0_0 = L0_0.getfilename
L1_1 = mp
L1_1 = L1_1.bitor
L2_2 = mp
L2_2 = L2_2.FILEPATH_QUERY_FNAME
L8_8 = L1_1(L2_2, L3_3)
L0_0 = L0_0(L1_1, L2_2, L3_3, L4_4, L5_5, L6_6, L7_7, L8_8, L1_1(L2_2, L3_3))
L1_1 = string
L1_1 = L1_1.match
L2_2 = L0_0
L1_1 = L1_1(L2_2, L3_3)
if not L1_1 then
  L1_1 = string
  L1_1 = L1_1.match
  L2_2 = L0_0
  L1_1 = L1_1(L2_2, L3_3)
  if not L1_1 then
    L1_1 = mp
    L1_1 = L1_1.CLEAN
    return L1_1
  end
end
L1_1 = mp
L1_1 = L1_1.GetCertificateInfo
L1_1 = L1_1()
if L1_1 ~= nil then
  L2_2 = #L1_1
elseif L2_2 == 0 then
  L2_2 = mp
  L2_2 = L2_2.CLEAN
  return L2_2
end
L2_2 = 0
for L6_6, L7_7 in L3_3(L4_4) do
  L8_8 = L7_7.AuthenticodeContentType
  if L8_8 == "PE" then
    L8_8 = L7_7.Certificates
    if L8_8 ~= nil then
      for _FORV_12_, _FORV_13_ in ipairs(L8_8) do
        if _FORV_13_.Subject ~= nil and _FORV_13_.Issuer ~= nil then
          if _FORV_13_.Subject.CommonName and string.find(mp.utf16to8(_FORV_13_.Subject.CommonName), "Microsoft ", 1, true) then
          end
          if _FORV_13_.Issuer.CommonName and string.find(mp.utf16to8(_FORV_13_.Issuer.CommonName), "Microsoft ", 1, true) then
          end
          if true and true and true and true then
            if mp.IsTrustedFile() then
              L2_2 = L2_2 + 0
            else
              L2_2 = L2_2 + 1
            end
          else
            L2_2 = L2_2 + 100
          end
        end
      end
    end
  end
end
if L2_2 == 0 then
  return L3_3
elseif L2_2 > 0 and L2_2 < 100 then
  L3_3(L4_4)
elseif L2_2 >= 100 then
  L3_3(L4_4)
else
  return L3_3
end
return L3_3

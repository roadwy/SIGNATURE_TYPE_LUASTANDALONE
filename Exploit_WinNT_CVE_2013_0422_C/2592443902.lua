local L0_0
L0_0 = mp
L0_0 = L0_0.CLEAN
if mp.get_mpattribute("//SIGATTR:CVE-2013-0422.getMBeanInstantiator") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.newMBeanServer") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.findClass") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.publicLookup") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.findVirtual") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.methodType1") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.methodType2") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.methodType3") == true and mp.get_mpattribute("//SIGATTR:CVE-2013-0422.invokeWithArguments") == true then
  L0_0 = mp.LOWFI
end
if L0_0 == mp.LOWFI then
  if mp.get_mpattribute("//SIGATTR:Java.redefineClass") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.ProcessBuilderInit") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.getRuntime") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.RuntimeExec") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.ProcessBuilderStart") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.indirectMethodInvoke") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.indirectNewInstance") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.ClassNewInstance") then
  end
  if mp.get_mpattribute("//SIGATTR:Java.doPrivileged") then
  end
  if 0 + 2 + 2 + 2 + 3 + 3 + 5 + 5 + 5 + 5 >= 10 then
    L0_0 = mp.INFECTED
  end
end
return mp.CLEAN

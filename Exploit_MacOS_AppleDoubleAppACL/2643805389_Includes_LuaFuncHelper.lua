local L0_0, L1_1, L2_2, L3_3, L4_4, L5_5, L6_6
L0_0 = mp
L0_0 = L0_0.getfilename
L1_1 = mp
L1_1 = L1_1.FILEPATH_QUERY_FULL
L0_0 = L0_0(L1_1)
L1_1 = string
L1_1 = L1_1.find
L2_2 = L0_0
L3_3 = "->"
L4_4 = 1
L5_5 = true
L1_1 = L1_1(L2_2, L3_3, L4_4, L5_5)
L1_1 = L1_1 ~= nil
if not L1_1 then
  L2_2 = mp
  L2_2 = L2_2.CLEAN
  return L2_2
end
L2_2 = string
L2_2 = L2_2.find
L3_3 = L0_0
L4_4 = "^/Users/.-/Downloads/"
L5_5 = 1
L6_6 = false
L2_2 = L2_2(L3_3, L4_4, L5_5, L6_6)
L2_2 = L2_2 ~= nil
if not L2_2 then
  L3_3 = mp
  L3_3 = L3_3.CLEAN
  return L3_3
end
L3_3 = string
L3_3 = L3_3.gsub
L4_4 = L0_0
L5_5 = "->"
L6_6 = "|"
L3_3 = L3_3(L4_4, L5_5, L6_6)
L4_4 = split
L5_5 = L3_3
L6_6 = "|"
L4_4 = L4_4(L5_5, L6_6)
L5_5 = #L4_4
L5_5 = L5_5 == 2
if not L5_5 then
  L6_6 = mp
  L6_6 = L6_6.CLEAN
  return L6_6
end
L6_6 = L4_4[2]
if not (string.find(L6_6, "/", 1, true) == nil) then
  return mp.CLEAN
end
return mp.INFECTED

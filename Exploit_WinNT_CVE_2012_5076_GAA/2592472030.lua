local L0_0, L1_1
L0_0 = mp
L0_0 = L0_0.CLEAN
L1_1 = 0
if mp.get_mpattribute("SIGATTR:CVE-2012-5076.GenericConstructorInit") == true and mp.get_mpattribute("SIGATTR:CVE-2012-5076.GenericConstructorCreate") == true and mp.get_mpattribute("SIGATTR:CVE-2012-5076.GetMethod") == true then
  if mp.get_mpattribute("SIGATTR:Java.redefineClass") then
    L1_1 = L1_1 + 2
  end
  if mp.get_mpattribute("SIGATTR:Java.indirectMethodInvoke") then
    L1_1 = L1_1 + 2
  end
  if mp.get_mpattribute("SIGATTR:Java.ResourceToByteArray") then
    L1_1 = L1_1 + 2
  end
  if mp.get_mpattribute("SIGATTR:Java.ClassNewInstance") then
    L1_1 = L1_1 + 3
  end
  if mp.get_mpattribute("SIGATTR:Java.indirectNewInstance") then
    L1_1 = L1_1 + 5
  end
  if L1_1 >= 5 then
    L0_0 = mp.LOWFI
  end
end
if L0_0 == mp.LOWFI then
  if mp.get_mpattribute("SIGATTR:Java.ProcessBuilderInit") then
  end
  if mp.get_mpattribute("SIGATTR:Java.getRuntime") then
  end
  if mp.get_mpattribute("SIGATTR:Java.RuntimeExec") then
  end
  if mp.get_mpattribute("SIGATTR:Java.ProcessBuilderStart") then
  end
  if mp.get_mpattribute("SIGATTR:Java.allPermissions") then
  end
  if mp.get_mpattribute("SIGATTR:Java.doPrivileged") then
  end
  if mp.get_mpattribute("BRUTE:CVE-2012-5076.AnonymousClassLoader") then
  end
  if mp.get_mpattribute("Exploit:Java/CVE-2012-5076!zkm") then
  end
  if mp.get_mpattribute("SIGATTR:Java.processClassPath") then
  end
  if mp.get_mpattribute("SIGATTR:Java.Exploit.hw.test") then
  end
  if 0 + 2 + 2 + 3 + 3 + 3 + 5 + 10 + 10 + 10 + 10 + L1_1 >= 15 then
    L0_0 = mp.INFECTED
  end
end
if L0_0 == mp.INFECTED then
  return mp.INFECTED
elseif L0_0 == mp.LOWFI then
  return mp.LOWFI
else
  return mp.CLEAN
end
return mp.CLEAN
